<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 卡里的技术博客</title>
    <link>http://gaocarri.top/post/</link>
    <description>Recent content in Posts on 卡里的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 01 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://gaocarri.top/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vue的响应式原理</title>
      <link>http://gaocarri.top/post/vue%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/vue%E7%9A%84%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/</guid>
      <description>Vue的响应式原理主要分为两大部分 修改数据，Vue内部监听数据的改变（Object.defineProperty 监听对象属性改变） 发布者订阅</description>
    </item>
    
    <item>
      <title>[Vue warn]: Error in render: TypeError: Cannot read property &#39;length&#39; of undefined解决方法</title>
      <link>http://gaocarri.top/post/cannot-read-property-length-of-undefined%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/cannot-read-property-length-of-undefined%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid>
      <description>今天在使用vue做项目的时候遇到了一个错误，不断尝试后终于找到了解决方法，顺便举一反三一波 错误及其解决方法 我给一个组件的子组件传递了一个对象</description>
    </item>
    
    <item>
      <title>Vue基础(三)--组件相关</title>
      <link>http://gaocarri.top/post/vue%E5%9F%BA%E7%A1%80%E4%B8%89-%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/vue%E5%9F%BA%E7%A1%80%E4%B8%89-%E7%BB%84%E4%BB%B6/</guid>
      <description>包含以下几个部分 组件注册 组件通信 父子组件相互访问 插槽 全局组件和局部组件的注册 全局组件 直接上代码,这样即注册了一个全局组件 1 2 3 4 5 6 7 8 Vue.component(&amp;#39;cpn&amp;#39;,{ template:</description>
    </item>
    
    <item>
      <title>Vue基础(二)--事件监听，条件判断，循环遍历，v-model</title>
      <link>http://gaocarri.top/post/vue%E5%9F%BA%E7%A1%80%E4%BA%8C-%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86v-model/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/vue%E5%9F%BA%E7%A1%80%E4%BA%8C-%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86v-model/</guid>
      <description>事件监听 分为以下三部分 v-on的基本使用 v-on的参数 v-on的修饰符 v-on的基本使用 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt; &amp;lt;h2&amp;gt;{{counter}}&amp;lt;/h2&amp;gt; &amp;lt;button @click=&amp;#34;increment&amp;#34;&amp;gt;+&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; ...... &amp;lt;script&amp;gt;</description>
    </item>
    
    <item>
      <title>Vue基础(一)--插值操作，v-bind，计算属性</title>
      <link>http://gaocarri.top/post/vue%E5%9F%BA%E7%A1%80%E4%B8%80-%E6%8F%92%E5%80%BC%E6%93%8D%E4%BD%9Cv-bind%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7/</link>
      <pubDate>Sun, 15 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/vue%E5%9F%BA%E7%A1%80%E4%B8%80-%E6%8F%92%E5%80%BC%E6%93%8D%E4%BD%9Cv-bind%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7/</guid>
      <description>Vue是一种渐进式框架，什么是渐进式框架 渐进式框架：即可以在项目中部分使用Vue，不必非要完全使用 Vue的MVVM Vue是一种MVVM框架。</description>
    </item>
    
    <item>
      <title>跨域以及实现跨域</title>
      <link>http://gaocarri.top/post/%E8%B7%A8%E5%9F%9F%E4%BB%A5%E5%8F%8A%E5%AE%9E%E7%8E%B0%E8%B7%A8%E5%9F%9F/</link>
      <pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/%E8%B7%A8%E5%9F%9F%E4%BB%A5%E5%8F%8A%E5%AE%9E%E7%8E%B0%E8%B7%A8%E5%9F%9F/</guid>
      <description>之前把Ajax弄懂了，现在回头再看跨域终于有了清晰的理解。 本文包括以下内容 什么是同源 什么是跨域 CORS实现跨域 JSONP实现跨域 什么是同源 如</description>
    </item>
    
    <item>
      <title>对于JS继承的理解</title>
      <link>http://gaocarri.top/post/%E5%AF%B9%E4%BA%8Ejs%E7%BB%A7%E6%89%BF%E7%9A%84%E7%90%86%E8%A7%A3/</link>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/%E5%AF%B9%E4%BA%8Ejs%E7%BB%A7%E6%89%BF%E7%9A%84%E7%90%86%E8%A7%A3/</guid>
      <description>同样又是一个查缺补漏，这几天疯狂看博客，把不清楚的知识给弄清楚 首先，谈JS的继承就得提到原型以及原型链，对象_proto_===其构造函数.</description>
    </item>
    
    <item>
      <title>call,apply和bind的使用</title>
      <link>http://gaocarri.top/post/callapply%E5%92%8Cbind%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/callapply%E5%92%8Cbind%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>同样是对之前知识的查缺补漏 call,apply,bind都可以用来指定this的值。 举例 1 2 3 4 5 6 7 8 9 10 11 12 13 const xw = { name:&amp;#39</description>
    </item>
    
    <item>
      <title>搞懂JS闭包</title>
      <link>http://gaocarri.top/post/%E6%90%9E%E6%87%82js%E9%97%AD%E5%8C%85/</link>
      <pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/%E6%90%9E%E6%87%82js%E9%97%AD%E5%8C%85/</guid>
      <description>算是对之前学习的查缺补漏吧 本文包括： 闭包是什么 闭包的用途 闭包的缺点 闭包是什么 一句话概括：函数和函数内部能访问到的变量（也叫环境）的总和，就是</description>
    </item>
    
    <item>
      <title>使用Promise</title>
      <link>http://gaocarri.top/post/%E4%BD%BF%E7%94%A8promise/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/%E4%BD%BF%E7%94%A8promise/</guid>
      <description>虽说最近学到Vue了,但是突然发现自己对Promise的用法掌握的不怎么样,遂写一篇博客,也可以当作自己平常使用的参考。 内容包括以下几个部分</description>
    </item>
    
    <item>
      <title>认识MVC</title>
      <link>http://gaocarri.top/post/%E8%AE%A4%E8%AF%86mvc/</link>
      <pubDate>Fri, 29 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/%E8%AE%A4%E8%AF%86mvc/</guid>
      <description>花了几天的时间熟悉了MVC的思想，回头发现自己以前写的代码弱（太）爆（多）了，记一篇博客回顾所学。 以下内容代表自己的思考，结论并非一定正确。</description>
    </item>
    
    <item>
      <title>四种排序算法</title>
      <link>http://gaocarri.top/post/%E5%9B%9B%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 23 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/%E5%9B%9B%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
      <description>选择排序 之前入门了数据结构与算法，学了几种经典的排序，今天在这里把他记录下来 选择排序的思想，依次找到最小的数的index，把它取出来，再在去</description>
    </item>
    
    <item>
      <title>如何利用哈希表存储用户操作</title>
      <link>http://gaocarri.top/post/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%88%A9%E7%94%A8%E5%93%88%E5%B8%8C%E8%A1%A8%E5%AD%98%E5%82%A8%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%88%A9%E7%94%A8%E5%93%88%E5%B8%8C%E8%A1%A8%E5%AD%98%E5%82%A8%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C/</guid>
      <description>这几天学完jQuery尝试做了一个导航网站的小项目 github地址 为了实现页面刷新或重启后用户的新增网站不被删除，使用了哈希表将用户的数据存</description>
    </item>
    
    <item>
      <title>jQuery的使用</title>
      <link>http://gaocarri.top/post/jquery%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/jquery%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>这两天自己尝试了封装DOM，并且熟悉了jQuery，记一篇博客概述jQuery的基本使用方法。 jQuery如何获取元素 首先概括jQuery的</description>
    </item>
    
    <item>
      <title>如何优化DOM操作来优化性能</title>
      <link>http://gaocarri.top/post/%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96dom%E6%93%8D%E4%BD%9C%E6%9D%A5%E4%BC%98%E5%8C%96%E6%80%A7%E8%83%BD/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/%E5%A6%82%E4%BD%95%E4%BC%98%E5%8C%96dom%E6%93%8D%E4%BD%9C%E6%9D%A5%E4%BC%98%E5%8C%96%E6%80%A7%E8%83%BD/</guid>
      <description>为什么DOM操作很慢 一句话概括：DOM对象本身也是一个js对象，所以严格来说，并不是操作这个对象慢，而是说操作了这个对象后，会触发一些浏览器</description>
    </item>
    
    <item>
      <title>自己画出JS世界</title>
      <link>http://gaocarri.top/post/%E8%87%AA%E5%B7%B1%E7%94%BB%E5%87%BAjs%E4%B8%96%E7%95%8C/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/%E8%87%AA%E5%B7%B1%E7%94%BB%E5%87%BAjs%E4%B8%96%E7%95%8C/</guid>
      <description>关于一个JS世界是如何形成的？ 创建根对象#101(它有toString等属性)、根对象无名字（它的proto:null） 创建函数的原型#20</description>
    </item>
    
    <item>
      <title>JS函数执行时机</title>
      <link>http://gaocarri.top/post/js%E5%87%BD%E6%95%B0%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/js%E5%87%BD%E6%95%B0%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA/</guid>
      <description>今天学习到了关于JS函数执行时机方面的知识。 以下两个for循环各自独立 1 2 3 4 5 6 7 8 9 10 11 12 13 // 第一个： let i = 0 for(i = 0; i&amp;lt;6; i++){ setTimeout(()=&amp;gt;{ console.log(i) },0) } // 第二个</description>
    </item>
    
    <item>
      <title>JS对象基本用法</title>
      <link>http://gaocarri.top/post/js%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/js%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      <description>声明对象的两种语法 1 2 3 4 // 第1种： let obj = { &amp;#39;name&amp;#39;: &amp;#39;frank&amp;#39;, &amp;#39;age&amp;#39;: 18 } // 第2种： let obj = new Object({&amp;#39;name&amp;#39;: &amp;#39;frank&amp;#39;}) 键名必须是字符串，引号大部分时候可以省略（空格和中文时不可省） 就</description>
    </item>
    
    <item>
      <title>JS基本语法</title>
      <link>http://gaocarri.top/post/js%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/js%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</guid>
      <description>表达式和语句 表达式 1+2表达式的值是3 add(1,2)表达式的值是函数的返回值 console.log表达式的值为函数本身 console.lo</description>
    </item>
    
    <item>
      <title>初识JavaScript</title>
      <link>http://gaocarri.top/post/%E5%88%9D%E8%AF%86javascript/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/%E5%88%9D%E8%AF%86javascript/</guid>
      <description>JavaScript的诞生(参考阮一峰的博客) 诞生: JavaScript由Brendan Eich于1995年发明（只花了十天）。 目的: 网景公</description>
    </item>
    
    <item>
      <title>CSS知识总结</title>
      <link>http://gaocarri.top/post/css%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/css%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
      <description>一、浏览器渲染原理 参考文章 Google团队写的文章 渲染树构建、布局及绘制 渲染性能 使用transform来实现动画 查看CSS各属性触发什么 CSSTriggers.com 浏</description>
    </item>
    
    <item>
      <title>浅析URL</title>
      <link>http://gaocarri.top/post/%E6%B5%85%E6%9E%90url/</link>
      <pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/%E6%B5%85%E6%9E%90url/</guid>
      <description>IP的作用是什么 IP：Internet Protocol 约定了两件事情（作用） 如何定位一台设备 如何封装报文，和其他设备交流 几个特殊的IP 127.0.0.1表</description>
    </item>
    
    <item>
      <title>CSS的Float,Flex,Grid布局</title>
      <link>http://gaocarri.top/post/css%E7%9A%84floatflexgrid%E5%B8%83%E5%B1%80/</link>
      <pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/css%E7%9A%84floatflexgrid%E5%B8%83%E5%B1%80/</guid>
      <description>如何选取布局 图片来自饥人谷 Float布局 子元素上加float:left和width 父元素classname上加 clearfix 1 2 3 4 5 clearfix{ content:&amp;#39;&amp;#39;; display:block; clear:both; } Flex</description>
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>http://gaocarri.top/post/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      <description>一.a标签的用法 1 &amp;lt;a href=&amp;#34;&amp;#34; target=&amp;#34;_blank&amp;#34; download&amp;gt; 1.1属性 href target download rel=noopener 1.2 href 1.2.1 href的取值 1.网址 https:// google.com http:// google.com //google.com 一般情况下用//google.com就可以了，浏览器会自动</description>
    </item>
    
    <item>
      <title>HTML入门笔记</title>
      <link>http://gaocarri.top/post/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B01/</guid>
      <description>HTML是谁发明的 Timothy John Berners-Lee爵士，英国计算机科学家，万维网的发明者 HTML起手应该写什么 1 2 3 4 5 6 7 8 9 10 11 12 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta</description>
    </item>
    
    <item>
      <title>如何使用Hugo搭建个人博客</title>
      <link>http://gaocarri.top/post/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sun, 27 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>http://gaocarri.top/post/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>关于Hugo Hugo的官方网站https://gohugo.io/ Go语言实现的一个博客生成器 世界上最快的博客生成器 安装Hugo 以下只谈Wi</description>
    </item>
    
    <item>
      <title>我的第一篇博客</title>
      <link>http://gaocarri.top/post/my-first-blog/</link>
      <pubDate>Sat, 26 Oct 2019 15:08:45 +0800</pubDate>
      
      <guid>http://gaocarri.top/post/my-first-blog/</guid>
      <description>大家好 这是我的博客，不定期记录一些文章和学习笔记。</description>
    </item>
    
  </channel>
</rss>